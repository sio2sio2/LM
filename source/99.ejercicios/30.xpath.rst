*XPath*
=======

#. Dada la solución propuesta para almacenar la información sobre las facturas de una empresa, determinar la expresión *XPath* que selecciona:

   .. rst-class:: simple

   #. Las facturas que tenían algún descuento

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //factura[not(@descuento) or @descuento = 0]

   #. Las facturas anteriores al año en curso

      .. rst-class:: sol-oculta

         *XPath* 1.0: no hay función que devuelva en año en curso.

         .. code-block:: xquery

            //factura[substring(@fecha,1, 4) < 2023]

         *XPath* 2/3:

         .. code-block:: xquery

            //factura[fn:year-from-date(@fecha) < fn:current-date  => fn:year-from-date()]

   #. El número de facturas a las que se les aplicó un descuento mayor del 5%

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//factura[@descuento > 5])

   #. Las facturas con cinco productos diferentes.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //factura[count(item) = 5]

   #. Las facturas en las que se facturó el producto "p01".

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //factura[item/@producto = "p01"]

   #. Los clientes que viven en Isla Cristina.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //cliente[direccion/poblacion = "Isla Cristina"]

   #. Los clientes que viven en la provincia de Huelva (el código postal puede servir para ello).

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //cliente[substring(direccion/cp, 1, 2) = 21]

   #. Los nombres de los productos con iva superreducido.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //producto[@iva = "superreducido"]/@nombre

   #. El número de productos que tienen un iva superreducido.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//producto[@iva = "superreducido"])

   #. Todas las facturas en las que el número total de artículos comprados
      fuese de más de 10. Para que tenga sentido esta pregunta, hágase la suposición
      de que todos los productos que se venden, se venden por unidades.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //factura[sum(item/@cantidad) > 10])

   #. El número de facturas emitidas en noviembre de 2012.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//factura[substring(@fecha, 1, 7) < "2012-11"])

   #. El número de facturas que sólo contienen un producto.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//factura[count(item) = 1])

   #. Los productos que se han vendido al menos una vez.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //producto[@codigo = //item/@producto]

   #. Las facturas a nombre de Perico de los Palotes.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //factura[@cliente = //cliente[nombre = "Perico de los Palotes"]/@id]

   #. Los productos de la factura con identificador "f01" cuyo iva es normal.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //producto[@iva = "normal"][@codigo = //factura[@codigo = "f01"]/item/@producto]

   #. Todas las facturas en las que se facturaron altramuces.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //factura[item/@producto = //producto[@nombre = "altramuces"]/@codigo]

   #. El total de sandías vendidas.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            sum(//factura/item[@producto = //producto[@nombre = "sandía"]/@codigo]/@cantidad)

   #. Las facturas emitidas a residentes en Isla Cristina.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //factura[@cliente = //cliente[direccion/poblacion = "Isla Cristina"]/@id]

   #. Las facturas sin productos gravados con iva normal.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //factura[not(item[@producto = //producto[@iva = "normal"]/@codigo])]

   #. Las facturas cuyos productos están todos gravados con iva normal.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //factura[not(item[@producto != //producto[@iva = "normal"]/@codigo])]

   #. [XPath 2/3] El importe total de la primera factura sin tener en cuenta el descuento.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            sum(//factura[1]/item/(@precio * @cantidad))

   #. [XPath 2/3] El importe total de cada factura sin tener en cuenta el descuento.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //factura/sum(item/(@precio * @cantidad))

   #. [XPath 2/3] El importe total de cada factura.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //factura/((1 - (if (@descuento) then @descuento else 0) div 100)*sum(item/(@precio * @cantidad)))

#. Dada la solución propuesta para almacenar la información sobre los libros y préstamos en una biblioteca,
   determinar la expresión *XPath* que devuelve:

   .. rst-class:: simple

   #. El número de socios de la biblioteca

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//lector)

   #. La dirección del socio que se llama Perico de los Palotes.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //lector[nombre="Perico de los Palotes"]/direccion

   #. Los libros cuyo año de edición sea 1985.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //libro[año=1985]

   #. Los libros de la editorial Alfaguara.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //libro[editorial="Alfaguara"]

   #. El número total de ejemplares que hay en la biblioteca.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//ejemplar)

   #. Todos los libros cuyo autor sea "Miguel de Cervantes Saavedra".

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //libro[autor="Miguel de Cervantes Saavedra"]

   #. El número de ejemplares del libro con ISBN 00-9081-234.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//libro[isbn="00-9081-234"]//ejemplar)

   #. El número total de ejemplares actualmente en préstamo.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//prestamo[not(@entrega)])

   #. El número total de ejemplares que no se encuentran prestados.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//ejemplar) - count(//prestamo[not(@entrega)])

   #. Los libros que se han prestado al socio l01.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//ejemplar) - count(//prestamo[not(@entrega)])

   #. La cantidad de ejemplares de libros de la editorial Castalia.


      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//libro[editorial="Castalia"]//ejemplar)

   #. Los identificadores de los socios que tienen algún libro en préstamo.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //lector[@registro = //prestamo[not(@entrega)]/@lector]/@registro

         Pero si usamos *XPath* 2/3 podemos hacer:

         .. code-block:: xquery

            fn:distinct-values(//prestamo[not(@entrega)]/@lector)

   #. Los libros que no están prestados al socio l01.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //libro[not(.//@codigo = //prestamo[not(@entrega)][@lector = "l01"]/@ejemplar)]

   #. Los libros que se han prestado al socio l01, pero no al socio l02.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //libro[.//@codigo = //prestamo[@lector = "l01"]/@ejemplar][not(.//@codigo = //prestamo[@lector = "l02"]/@ejemplar)]

   #. Los ejemplares aún disponibles (no prestados) de Don Quijote de La Mancha.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //libro[nombre="Don Quijote de la Mancha"]//ejemplar[not(@codigo = //prestamo[not(@entrega)]/@ejemplar)]

   #. Los libros de los que quedan menos de dos ejemplares disponibles en la biblioteca.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //libro[count(.//ejemplar[not(@codigo = //prestamo[not(@entrega)]/@ejemplar)]) < 2]

   #. Los libros de los que no se ha prestado nunca ningún ejemplar.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //libro[not(.//ejemplar/@codigo = //prestamo/@ejemplar))]

   #. El número de ejemplares prestados al socio Perico de los Palotes.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//prestamo[not(@entrega)][@lector = //lector[nombre="Perico de los Palotes"]/@registro])

   #. Los libros que tienen todos los ejemplares prestados

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //libro[count(.//ejemplar) = count(.//ejemplar[@codigo = //prestamo[not(@entrega)]/@ejemplar])]

   #. Los libros que tienen más ejemplares prestados que en la biblioteca.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //libro[2*count(.//ejemplar[@codigo = //prestamo[not(@entrega)]/@ejemplar]) > count(.//ejemplar)]

#. Dada la solución propuesta para almacenar la información sobre los coches
   que vende un concesionario, determinar la expresión *XPath* que devuelve:

   .. rst-class:: simple

   #. La marca de coches que vende el concesionario.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            /concesionario/@marca

   #. El nombre de los modelos que vende el concesionario.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //modelo/@nombre

   #. Los modelos de cinco plazas.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //modelo[plazas=5]

   #. Los modelos que tienen una cilindrada mayor a 300.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //modelo[cilindrada>300]

   #. El modelo León.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //modelo[@nombre="León"]

   #. El último modelo del archivo

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //modelo[last()]

   #. El número de modelos que vende el concesionario.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//modelo)

   #. El número de modelos que no son de cinco plazas

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//modelo[plazas!=5])

   #. El cliente de identificador c01.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//modelo)

   #. El número de clientes.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//cliente)

   #. Los coches que ha reservado el cliente c01

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //coche[@reservado="c01"]

   #. Los coches nuevos

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //coche[@tipo="nuevo"]

   #. Los coches reservados.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //coche[@reservado]

   #. El número de coches León.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//coche[@modelo = //modelo[@nombre="León"]/@id])

   #. Los ibizas reservados

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //coche[@modelo = //modelo[@nombre="Ibiza"]/@id][@reservado]

   #. Los coches de segunda mano reservados.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //coche[@tipo="2mano"][@reservado]

   #. Los coches reservados que sean ibiza o león

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //coche[@modelo = //modelo[@nombre="León" or @nombre="Ibiza"]/@id][@reservado]

   #. Los coches nuevos no reservados aún.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //coche[@tipo="nuevo"][not(@reservado)]

   #. El número de coches del modelo León

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//coche[@modelo = //modelo[@nombre="León"]/@id])

   #. Los coches reservados a los habitantes de Villabajo.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //coche[@reservado = //cliente[.//poblacion="Villaabajo"]/@id]

#. Dada la solución propuesta para almacenar la información sobre los parques
   nacionales, determinar la expresión *XPath* que devuelve:

   .. rst-class:: simple

      #. El número de especies vegetales.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               count(//especie[@tipo = "flora"])

      #. Las especies vegetales con un peligro alto de extinción.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               //especie[@tipo = "flora"][@peligro = "alto"]

      #. El número de especies animales en peligro bajo de extinción.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               //especie[@tipo = "fauna"][@peligro = "bajo"]

      #. El número de especies en peligro alto de extinción.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               count(//especie[@peligro = "alto"])

      #. El nombre común de las especies vegetales en peligro alto de extinción

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               //especie[@tipo = "flora"][@peligro = "alto"]/comun

      #. El peligro de extinción del animal de nombre común "Lince ibérico".

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               //especie[comun = "Lince ibérico"]/@peligro

      #. El número de parques nacionales.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               count(//parque)

      #. El número de parques en Canarias.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               count(//parque[@ca = "Canarias"])

      #. Los parques de la provincia de Huelva.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               count(//parque[@provincia = "Huelva"])

      #. Los parques con una extensión mayor de 30.000 hectáreas.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               //parque[@extension > 30000]

      #. El total de presupuestos.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               sum(//parque/@presupuesto)

      #. El parque de Timanfaya.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               //parque[@nombre = "Timanfaya"]

      #. El total de ejemplares de Lince ibérico que hay en los parques.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               sum(//parque/especimen[@ref = //especie[comun = "Lince ibérico"]/@id]/@ejemplares)

      #. El número de especies de interés en Doñana.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               count(//parque[@nombre = "Doñana"]/especimen)

      #. El número de ejemplares animales de interés en Doñana.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               sum(//parque[@nombre = "Doñana"]/especimen[@ref = //especie[@tipo = "fauna"]/@id]/@ejemplares)

      #. Las especies animales de interés del parque de Garajonay.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               //especie[@tipo = "fauna"][@id = //parque[@nombre = "Garajonay"]/especimen/@ref]

      #. Las comunidades autónomas con parques nacionales.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               //parque/@ca

      #. Los parques nacionales con menos de veinte especies de interés

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               //parque/[count(especimen) < 20]

      #. El número de parques nacionales que sólo tiene como especies de interés animales.

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               count(//parque[not(especimen[@ref = //especie[@tipo = "flora"]/@id])])

      #. Los parques donde hay más especies animales de interés que vegetales

         .. rst-class:: sol-oculta

            .. code-block:: xquery

               //parque[count(especimen[@ref = //especie[@tipo = "fauna"]/@id]) > count(especimen[@ref = //especie[@tipo = "flora"]/@id])]

#. Dada la solución propuesta para almacenar la información sobre los
   habitantes de un municipio, determinar la expresión *XPath* que devuelve:

   .. rst-class:: simple

   #. El número de habitantes del municipio.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//persona)

   #. Los varones del municipio.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[@sexo="hombre"]

   #. Las mujeres del municipio.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[@sexo="mujer"]

   #. El número de habitantes de los que se tiene registrado el padre.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[@padre]

   #. El número de habitantes de los que se tienen registrados padre y madre.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[@padre][@madre]

   #. El número de habitantes de los que no se tienen registrados padre ni madre.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[not(@padre)][not(@madre)]

   #. Los nombres de los habitantes de los que se tiene registrada la madre, pero no el padre.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[not(@padre)][@madre]/nombre

   #. Los varones cazorleños de los que se tiene registrado el padre.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[@sexo = "hombre"][@padre][origen = "Cazorla"]

   #. Los habitantes que se llaman Perico.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[nombre = "Perico"]

   #. El listado de identificadores de personas que son padre.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona/@padre

   #. El listado de identificadores de personas que son madre.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona/@madre

   #. Los habitantes de padre registrado que han nacido en Cazorla.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[@padre][origen = "Cazorla"]

   #. Los datos de los habitantes cuyo padre tienen identificador p01.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[@padre = "p01"]

   #. Los habitantes que son padre de alguien.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[@id = //persona/@padre]

   #. Las habitantes que son madre de alguien.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[@id = //persona/@madre]

   #. Los habitantes que son padre de alguien y, a la vez, tienen padre registrado.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[@id = //persona/@padre][@padre]

   #. ¿Hay alguna persona que haya nacido en Villaconejos.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            boolean(//persona[origen = "Villaconejos"])

   #. El listado de localidades en las que hayan nacido los habitantes que son padre.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[@id = //persona/@padre]/origen

         .. note:: En *XPath* 2/3 podríamos aññadir ``fn:distinct-values()``
            para evitar las repeticiones.

   #. Los varones que no son padre.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[not(@id = //persona/@padre)][@sexo = "hombre"]

   #. Las mujeres que no son madre de ninguna niña.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //persona[not(@id = //persona[@sexo = "mujer"]/@madre)][@sexo = "mujer"]

#. Dada la solución propuesta para almacenar la información de un dibujo
   técnico en dos dimensiones, determinar la expresión *XPath* que selecciona:

   .. rst-class:: simple

   #. Todas las circunferencias.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //circunferencia

   #. La cuarta recta.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //recta[4]

   #. Los centros de las circunferencias.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //circunferencia/@x | //cicunferencia/@y

   #. El último punto.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //punto[last()]

   #. El rectángulo con identificador "e32".

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //rectangulo[@id = 'e32']

   #. Todos los radios de las circunferencias.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //circunferencia/@r

   #. El radio de la circunferencia de identificador "e2".

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //circunferencia[@id = 'e32']/@r

   #. El radio de la quinta circunferencia.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //circunferencia[5]/@r

   #. Todos los radios de circunferencia mayores de 10.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //circunferencia/@r[. > 10]

   #. Las unidades en las que se han expresado todos los números.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            /grafico/@unidad

   #. El identificador de la quinta entidad de dibujo.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            /grafico/*[5]/@id

   #. Las rectas cuyo punto inicial sea el centro de coordenadas (0,0).

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //recta[@x1 = 0][@y1 = 0]

   #. Las rectas cuyo punto inicial esté en el segundo cuadrante.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //recta[@x1 < 0][@y1 > 0]

   #. Los puntos que se encuentren en el cuarto cuadrante.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //recta[@x > 0][@y < 0]

   #. El cuarto de los rectángulos

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //rectangulo[4]

   #. Todas las coordenadas y de todas las rectas.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //recta/@y

   #. Todas las coordenadas y de todas las entidades de dibujo.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            /grafico/*/@y

   #. Los puntos finales de todos los rectángulos.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //rectangulo/@x2 | //rectangulo/@y2

   #. Todas las rectas cuya coordenada x del punto inicial sea mayor que la coordenada x del punto final.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //recta[@x1 > @x2]

   #. ¿Cuántos puntos hay en total?

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//punto)

   #. ¿Cuántos puntos hay en el primer cuadrante?

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//punto[@x > 0][@y >  0])

   #. ¿Cuántas circunferencias tienen radio mayor de 20?

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(//circunferencia[@r > 20])

   #. ¿Cuántas entidades de dibujo hay en total?

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(/grafico/*)

   #. ¿Cuántas coordenadas x hay definidas en total?

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            count(/grafico/*/@x | /grafico/*/@x1 | /grafico/*/@x2)

   #. Todos los rectángulos cuyo lado horizontal sea el doble de largo que el vertical.

      .. rst-class:: sol-oculta

         .. code-block:: xquery

            //rectangulo[(@x2-@x1)*(@x2-@x1) = 4(@y2-@y1)*(@y2-@y1)]
